spring.application.name=RecapMe Backend

# Google Gemini API Configuration
gemini.api-key=${GEMINI_API_KEY}
gemini.model=${GEMINI_MODEL}

# Redis Configuration (optional - only used for rate limiting)
spring.data.redis.url=${REDIS_URL:}

# Actuator disabled - using custom health endpoint
management.endpoints.enabled-by-default=false

# API Security Configuration
app.api.key=${API_KEY}

# Environment Configuration
app.development=${DEVELOPMENT:false}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:}

# Request Size Limits (20MB for messages)
server.tomcat.max-http-form-post-size=20MB
server.tomcat.max-swallow-size=20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.gemini.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.gemini.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.gemini.sliding-window-size=10
resilience4j.circuitbreaker.instances.gemini.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.gemini.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.gemini.automatic-transition-from-open-to-half-open-enabled=true

# Resilience4j Retry Configuration
resilience4j.retry.instances.gemini.max-attempts=3
resilience4j.retry.instances.gemini.wait-duration=1s
resilience4j.retry.instances.gemini.exponential-backoff-multiplier=2

# Resilience4j TimeLimiter Configuration
resilience4j.timelimiter.instances.gemini.timeout-duration=30s
